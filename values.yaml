# Default values for multiple-deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""
namespace: fsa-stack
ingress:
  enabled: true
  className: "nginx"
  annotations:    
    external-dns.alpha.kubernetes.io/hostname: <ADD_HOST_HERE>
    cert-manager.io/cluster-issuer: <ADD_CERTIFICATE_ISSUER_HERE>        
  host: <ADD_HOST_HERE>
  path: /
  pathType: Prefix
  tls: 
    certificateName: <ADD_CERTIFICATE_NAME_HERE>
    secretName: <ADD_CERTIFICATE_SECRET_NAME_HERE>
    clusterIssuer: <ADD_CERTIFICATE_ISSUER_HERE>

deployment:
  fsaApi:
    imagePullSecrets: []
    imageName: <ADD_FSAAPI_IMAGE_URL_HERE>
    imageTag: 1.0.0-5d61cc3
    imagePullPolicy: Always
    serviceAccountName: <ADD_FSAAPI_SERVICE_ACCOUNT_HERE>
    containerPort: 8080
    replicaCount: 1
    env:
    # TZ: "<INSTERT_HERE_TIMEZONE>"      
    # ANSWER_ENDPOINT: "<INSTERT_HERE_ANSWER_ENDPOINT>"      
    # AWS_REGION: "<INSTERT_HERE_AWS_REGION>"      
    # DB_SECRET_NAME: "<INSTERT_HERE_DB_SECRET_NAME>"       
    service:
      name: fsa-api
      type: NodePort
      port: 8080
    resources: {}
    # limits:
    #   memory: 950Mi
    # requests:
    #   cpu: 100m
    #   memory: 450Mi
  fsaWebApp:
    imagePullSecrets: []
    imageName: <ADD_FSAWEBAPP_IMAGE_URL_HERE>
    imageTag: 1.0.0-e7f3655
    imagePullPolicy: Always
    containerPort: 8080
    replicaCount: 1
    env:
    # TZ: "<INSTERT_HERE_TIMEZONE>"     
    service:
      name: fsa-webapp
      type: NodePort
      port: 8080
    resources: {}
    # limits:
    #   memory: 950Mi
    # requests:
    #   cpu: 100m
    #   memory: 450Mi  
podAnnotations: {}
podSecurityContext: {}
# fsGroup: 2000

nodeSelector: {}
tolerations: []
affinity: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
