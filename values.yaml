# Default values for multiple-deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""
namespace: fsa-stack
ingress:
  enabled: true
  className: "alb"
  annotations:
    # kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/load-balancer-name: t5alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: test-alb
    external-dns.alpha.kubernetes.io/hostname: <ADD_HOST_HERE>
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: <ADD_CERTIFICATE_HERE>
    # cert-manager.io/cluster-issuer: letsencrypt-production    
    # alb.ingress.kubernetes.io/tags: product=check        
  host: <ADD_HOST_HERE>
  path: /
  pathType: Prefix
  tls: []
  # secretName: website-tls  
  # clusterIsser: letsencrypt-production
deployment:
  fsaApi:
    imagePullSecrets: []
    imageName: <ADD_FSAAPI_IMAGE_URL_HERE>
    imageTag: 1.0.0-10653a5
    imagePullPolicy: Always
    serviceAccountName: <ADD_FSAAPI_SERVICE_ACCOUNT_HERE>
    containerPort: 8080
    replicaCount: 1              
    env:      
      # TZ: "<INSTERT_HERE_TIMEZONE>"      
      # ANSWER_ENDPOINT: "<INSTERT_HERE_ANSWER_ENDPOINT>"      
      # AWS_REGION: "<INSTERT_HERE_AWS_REGION>"      
      # DB_SECRET_NAME: "<INSTERT_HERE_DB_SECRET_NAME>"       
    service:
      name: fsa-api
      type: NodePort
      port: 8080
    resources: {}
    # limits:
    #   memory: 950Mi
    # requests:
    #   cpu: 100m
    #   memory: 450Mi

  fsaWebApp:
    imagePullSecrets: []
    imageName: <ADD_FSAWEBAPP_IMAGE_URL_HERE>
    imageTag: 1.0.0-e7f3655
    imagePullPolicy: Always
    containerPort: 8080
    replicaCount: 1
    env:      
      # TZ: "<INSTERT_HERE_TIMEZONE>"     
    service:
      name: fsa-webapp
      type: NodePort
      port: 8080
    resources: {}
    # limits:
    #   memory: 950Mi
    # requests:
    #   cpu: 100m
    #   memory: 450Mi  

podAnnotations: {}
podSecurityContext: {}
# fsGroup: 2000

nodeSelector: {}
tolerations: []
affinity: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
